version: '3.8'

services:
  # ðŸŸ¢ MQTT Broker (EMQX)
  emqx:
    image: emqx/emqx:5.0.10
    container_name: emqx
    restart: unless-stopped
    ports:
      - "1883:1883"      # MQTT
      - "8083:8083"      # MQTT over WebSockets
      - "18083:18083"    # Dashboard
    environment:
      - EMQX_NAME=emqx
    networks:
      - iot-net

  # ðŸŸ¢ TimescaleDB (PostgreSQL + time-series extension)
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=telemetry
    ports:
      - "5432:5432"
    volumes:
      - timescale-data:/var/lib/postgresql/data
    networks:
      - iot-net

  # ðŸŸ¢ Prometheus (Ø¨Ø±Ø§ÛŒ metrics)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - iot-net

  # ðŸŸ¢ Grafana (Ù†Ù…Ø§ÛŒØ´ Ø¯Ø§Ø¯Ù‡â€ŒÙ‡Ø§)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - iot-net

  # ðŸŸ¢ Ingest Service (Gin + Go)
  ingest:
    build: ../ingest
    container_name: ingest
    depends_on:
      - emqx
      - timescaledb
    ports:
      - "8080:8080"
    environment:
      - DB_URL=postgres://postgres:postgres@timescaledb:5432/telemetry
      - MQTT_BROKER=tcp://emqx:1883
    networks:
      - iot-net

volumes:
  timescale-data:

networks:
  iot-net:
    driver: bridge
